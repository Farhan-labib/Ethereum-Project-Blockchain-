<!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>
<!-- Include all compiled plugins (below), or include individual files as needed -->
<script src="js/bootstrap.min.js"></script>
<script src="js/web3.min.js"></script>
<script src="js/truffle-contract.js"></script>


https://drive.google.com/file/d/1VpKK5jcSJO-pHlxg9UDr0fTm6Kk8-COT/view?usp=sharing

https://chat.openai.com/share/79abaebf-165b-4950-a85d-24e96fe0c28d

window.onload = async function(){// app.js
// Connect to the smart contract using web3.js or ethers.js
// Connect to the deployed smart contract
const web3 = new Web3('http://localhost:8545');
const contractAddress = "0x4323CBfFD3E0Be04A7c45d35B2adF535CdacC570";  // Replace with the actual address
const contractABI = [
	{
		"inputs": [],
		"stateMutability": "nonpayable",
		"type": "constructor"
	},
	{
		"inputs": [
			{
				"internalType": "string",
				"name": "_name",
				"type": "string"
			},
			{
				"internalType": "uint256",
				"name": "_age",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "_height",
				"type": "uint256"
			},
			{
				"internalType": "string",
				"name": "_status",
				"type": "string"
			},
			{
				"internalType": "string",
				"name": "_description",
				"type": "string"
			},
			{
				"internalType": "string",
				"name": "_division",
				"type": "string"
			},
			{
				"internalType": "string",
				"name": "_contactNumber",
				"type": "string"
			}
		],
		"name": "addMissingPerson",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "admin",
		"outputs": [
			{
				"internalType": "address",
				"name": "",
				"type": "address"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "",
				"type": "address"
			}
		],
		"name": "missingPeople",
		"outputs": [
			{
				"internalType": "string",
				"name": "name",
				"type": "string"
			},
			{
				"internalType": "uint256",
				"name": "age",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "height",
				"type": "uint256"
			},
			{
				"internalType": "string",
				"name": "status",
				"type": "string"
			},
			{
				"internalType": "string",
				"name": "description",
				"type": "string"
			},
			{
				"internalType": "string",
				"name": "division",
				"type": "string"
			},
			{
				"internalType": "string",
				"name": "contactNumber",
				"type": "string"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"name": "peopleAddresses",
		"outputs": [
			{
				"internalType": "address",
				"name": "",
				"type": "address"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "_personAddress",
				"type": "address"
			},
			{
				"internalType": "string",
				"name": "_newStatus",
				"type": "string"
			}
		],
		"name": "updateMissingStatus",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	}
]
const missingDiariesInstance = new web3.eth.Contract(contractABI, contractAddress);
// Add Missing Person
async function addMissingPerson() {
    // Get user input
    const name = prompt("Enter name:");
    const age = prompt("Enter age:");
    const height = prompt("Enter height:");
    const status = "missing";  // Default status
    const description = prompt("Enter description:");
    const division = prompt("Enter division:");
    const contactNumber = prompt("Enter contact number:");

    // Call smart contract function to add missing person
    await missingDiariesInstance.addMissingPerson(
        name,
        parseInt(age),
        parseInt(height),
        status,
        description,
        division,
        contactNumber
    );

    console.log("Missing person added successfully!");
}

// Search Missing People
async function searchMissingPeople() {
    // Get user input
    const searchDivision = prompt("Enter division to search:");

    // Call smart contract function to search missing people by division
    // Display the results
    console.log("hello World");
    // Update the UI without refreshing the page
}

// Update Missing Status
async function updateMissingStatus() {
    // Get user input
    const personAddress = prompt("Enter the address of the missing person:");
    const newStatus = prompt("Enter the new status (found/missing):");

    // Call smart contract function to update missing status
    await missingDiariesInstance.updateMissingStatus(personAddress, newStatus);

    alert("Missing status updated successfully!");
}
};
